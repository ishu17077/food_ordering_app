# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Server Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
     runs-on: ubuntu-latest
     services:
      mongo:
        image: mongo:8.0.11-noble
        healthcheck:
          test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet


        env:
          MONGO_INITDB_DATABASE: food_ordering
        ports:
          - 27017:27017
        # options: >-
        #   --health-cmd mongo
        #   --health-interval 10s
        #   --health-timeout 5s
        #   --health-retries 10
        

     strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

     steps:
    
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./food_ordering_backend/package-lock.json
      # - name: Add MongoDB user
      #   run: |
      #     mongosh --host localhost --port 27017 <<EOF
      #     use food_ordering
      #     db.createUser({
      #       email: "test@mail.orgy",
      #       password: "passOrgy",
      #       auth_type: "email",
      #       "name": "OrgyUser",
      #       roles: [ { role: "readWrite", db: "food_ordering" } ]
      #     })
      #     EOF
      # Change Directory
      - name: Change to server directory
        run: cd ./food_ordering_backend && pwd

      # NPM Install packages
      - name: NPM install packages
        run: npm ci
        working-directory: ./food_ordering_backend
        
      # NPM Build
      - run: npm run build --if-present
        working-directory: ./food_ordering_backend
      
        # Run NPM tests
        name: Run NPM test
      - run: npm test
        working-directory: ./food_ordering_backend

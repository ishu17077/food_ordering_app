# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Server Tests



on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]



jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
         image: mongo
         ports:
           - 27017:27017
         env:
           MONGO_INITDB_DATABASE: food_ordering
            

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./food_ordering_backend/package-lock.json

      - name: Install mongosh
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://pgp.mongodb.com/server-8.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
            
      - name: Add a user in mongo db database
        run: |
          mongosh --host localhost --port 27017 <<EOF
          diableTelemetry()
          use food_ordering
          db.getSiblingDB("food_ordering").getCollection("users").insertOne({
          email: "test@mail.orgy",
          name: "OrgyUser",
          password: "passOrgy",
          auth_type: "email"
          })
          EOF
      # Change Directory
      - name: Change to server directory
        run: cd ./food_ordering_backend && pwd

      # NPM Install packages
      - name: NPM install packages
        run: npm ci
        working-directory: ./food_ordering_backend
        
      # NPM Build
      - run: npm run build --if-present
        working-directory: ./food_ordering_backend
      
        # Run NPM tests
        name: Run NPM test
      - run: npm test
        working-directory: ./food_ordering_backend